q
transaction_2.id
stock.transactions.last
q
self.save
self.transactions
self.transactions.push(args.id)
self.transactions.concat(args.id)
self.transactions
self.methods
self.transactions
args
self
q
args
self
q
self
args
self.transactions
self
q
attr.to_s.singularize
attr.to_s
attr
q
association
associations
hash.keys
hash.keys.include?(association)
hash.key.include?(association)
q
associations_hash[:has_many]
associations_hash[:belongs_to]
hash.keys
hash
associations_hash[:belongs_to]
hash.keys
hash
q
associations_hash
associations_hash[:has_many].dup.concat(associations_hash[:belongs_to].dup)
associations_hash[:has_many].dup.concat(assocations_hash[:belongs_to].dup)
associations_hash[:has_many].dup
associations_hash[:has_many]
associations_hash
hash
q
associations_hash
associations_hash[:has_many]
associations_hash
hash
associations_array
associations_hash
associationassociations_hash_hash
q
ar
ar.concat([6,7,8])
ar.merge([6,7,8])
ar = [1,2,3]
q
self
associations_array
q
qy
self.transactions
self.transactions.count
self.transactions
self
q
firebase_object.kind_of?(String)
firebase_object
q
"\"#{value}\""
value.kind_of?(String)
q
Rails.configuration.x.firebase_name.empty?
Rails.configuration.x.firebase_name
Rails.configuration.x.firebase_namee
Rails.configuration.x.firebase_name
Rails.configuration.x.firebase_name.empty?
Rails.configuration.x.firebase_namee.empty?
Rails.configuration.x.firebase_namee.exists?
Rails.configuration.x.firebase_name.exists?
Rails.configuration.x.firebase_namen.exists?
Rails.configuration.x.firebase_namen
Rails.configuration.x.firebase_name
q
Rails.configuration.x.firebase_name
Rails.configuration.x
Rails.configuration
q
Rails.configuration.x.firebase_config
q
Rails.configuration.firebase_name
q
Rails.configuration.firebase_name
q
config.x.payment = 3
config.x.payment
config
Rails.configuration.x.something
Rails.configuration.x
Rails.configuration
Rails.configuration.x.something = 3
Rails.application.config_for(:firebase_rails_config)
Rails.application.config_for(:firebase_rails_config).x.firebase_name
Rails.application.config_for(:firebase_rails_config)
Rails.application.config_for(:firebase_rails_configg)
Rails.application.config_for(:firebase_rails_config)
c
stock
q
self
ss
ss.remove_instance_variable("@symbol")
ss
ss = self.dup
self.id
self
self.as_firebase_json
"#{self.firebase_model}/#{self.id}"
self.id
self
c
stock.id
stock
c
stock.id
stock
q
self
self.as_firebase_json
"#{self.firebase_model}/#{self.id}"
q
stock = FirebaseStock.create({symbol: "AAA", price: 3.44})
stock.save
stock
stock.save
stock = FirebaseStock.create({symbol: "AAA", price: 3.44})
stock.save
stock
stock.save
stock = FirebaseStock.create({symbol: "AAA", price: 3.44})
stock.id
stock
q
verb
response
c
response
